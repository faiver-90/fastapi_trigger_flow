services:
  nginx:
    container_name: nginx
    image: nginx
    restart: always
    volumes:
      - ./nginx_conf/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx_conf/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8000:80"

#  main_service:
#    build: .
#    command:  >
#      bash -c "
#      poetry install &&
#      poetry run alembic upgrade head &&
#      poetry run uvicorn src.main_app.init_app:app --host 0.0.0.0 --port 8001 --reload"
#    restart: always
#    volumes:
#      - ./:/app
#    expose:
#      - "8001"
#    env_file:
#      - .env
#    depends_on:
#      - db
#      - redis
#    logging:
#      options:
#        max-size: "10m"
#        max-file: "3"

  celery-beat:
    container_name: main_beat
    restart: unless-stopped
    build: .
    command: bash -c "
      poetry run celery -A src.shared.celery_module.celery_worker.celery_app beat -l info"
    volumes:
      - ./:/app
    depends_on:
      - db
      - redis
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  celery-worker:
    container_name: main_celery
    build: .
    restart: unless-stopped
    command: bash -c "
      poetry run celery -A src.shared.celery_module.celery_worker.celery_app worker -l info"
    volumes:
      - ./:/app
    depends_on:
      - db
      - redis
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  db:
    container_name: db
    image: postgres:14-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
#    expose:
#      - 5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    env_file:
      - .env
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

#  rabbitmq:
#    container_name: rabbit
#    image: rabbitmq:3.10.7-management
#    ports:
#      - "5672:5672"     # ← AMQP для Celery и других клиентов
#      - "15672:15672"   # ← Web UI 8777

volumes:
  postgres_data:
